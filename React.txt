React 시작방법
cmd -> 경로설정 -> yarn create react-app 생성파일이름 -> cd 생성파일경로 -> 
yarn start -> vscode 실행 or code . 

--------------------------------------------------------------------------------------

React :Components 단위들이다.
Components : 독립적이고 재사용이 가능하다 -> 테스팅하기가 좋음 Unit Test
pureComponent : props , state가 (최상위) 변하지 않으면 렌더함수가 호출되지 않음 class
memo : pureComponent랑 거의 같음 차이점은 function 일때 사용하기 때문에 this를 안써도 됨 

lifecycle : ex) componentDidMount 화면상에 보여질때 호출해주는 함수
		componentWillUnmount 화면상에서 사라질때 호출해주는 함수 등 여러가지가 있음
		componentDidUpdate 업데이트가 되어질때 호출해주는 함수

		useEffect : Mount , Update가 될 때 호출해주는 함수 (둘중에 하나만 되어도)
		useEffect(() => {
		
		},[]) = 처음에 Mount 될 때만 호출,

		useEffect(() => {
		
		},[update]) = update가 변경될때만 호출  

state = Components에 들어있는 데이터를 나타내는 오브젝트
props = 외부에서 전달받은 데이터
render() = 사용자에게 표시되는 함수 
state가 변경되면 render()의 함수가 자동으로 호출됨

리액트의 컨셉 : 데이터가 변경이 될때마다 어플리케이션 전체를 다시 렌더링함
		가상의 DOM Tree가 있다. -> VDOM Virtual DOM Tree
리액트가 빠른 이유 : 가상의 DOM Tree가 있기 때문이다.

--------------------------------------------------------------------------------------
git : 소스코드의 버전을 관리 깃에 올리는걸 관리
node.js : 자바스크립트를 실행할 수 있는 환경 ,
	  어느곳에서나 자바스크립트로 프로그램이 가능하게하는 프레임워크
npm : 간단하게 라이브러리를 설치,버전 업데이트,라이브러리 삭제가능, 손쉽게 관리해줌 실행x
NPX : 원하는 패키지를 실행할 수 있게 도와주는 툴
yarn : npm의 단점 보안,성능,버전관리의 문제를 보안하기위한 것
yarn create react-app 파일이름 - React Project 생성

-------------------------------------------------------------------------------------
class component 동적처리 - state가 들어있음
React.PureComponent
setState(updater, callback)  함수

function component 정적으로 처리  
memo(function)
React Hook

html , jsx : 차이점은 html은 마크업 언어고 jsx은 자바스크립트 언어이다.
ex) const name = 'JuHwan';
    return <h1> {name} </h1>   이 가능함
 

jsx : <h1 className="클래스명" onClick="연결함수명"> </h1>
jsx : jsx에서는 형제노드(같은 노드를 쓸 수 없음) 쓰려면 div로 묶어줘야 됨. 하지만 div없이 사용가능한 방법
	
	ex) div없이 사용 가능

	<React.Fragment>			<>
	  <h1> Hello </h1>			  <h1> Hello </h1>			   
	  <h1> Hello! </h1>          ==  	  <h1> Hello! </h1>
	<React.Fragment>			<>

key : 배열 내에서 사용되는 키는 형제간에 고유해야합니다. 그러나 전역 적으로 고유 할 필요는 없습니다. 
      두 개의 다른 배열을 생성 할 때 동일한 키를 사용할 수 있습니다. (고유한 아이디)
      배열을 이용할 때 배열의 인덱스번호를 사용하면 안됨

event.preventDefault(); - form의 버튼이 눌러졌을 때 새로고침을 막아줌

Refs : javascript의 있는 DOM 기능
ex) inputRef = React.createRef();  -  inputRef 라는 오브젝트가 생성
    input ref={this.inputRef} 정의하면 연결됨
	